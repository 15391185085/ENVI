; -----------------------------
; Generated by the ENVI Modeler
; ENVI 5.5.2, API 3.4
; 批量去黑边
; 使用PixelwiseBandMathRaster模块，对三个波段分别去除黑边，相关公式：byte((b1 lt 10)*0+(b1 ge 10)*b1)
; 使用BuildLayerStack模块进行合成
; 最后将以上过程放在for循环中，统一进行批量处理
; -----------------------------
pro delete_black_frame_all
  compile_opt idl2, hidden
  on_error, 2

  e = ENVI()
  ; ----------------
  ; Input Parameters
  ; ----------------
  parameters_1 = Obj_New('ENVITask', DISPLAY_NAME='Input Parameters')
  hInfo = $
    '{' + $
    '    "name": "input_raster",' + $
    '    "display_name": "Input Raster",' + $
    '    "type": "ENVIRASTERARRAY",' + $
    '    "direction": "INPUT",' + $
    '    "required": true,' + $
    '    "description": "Specify an input raster to process.",' + $
    '    "hidden": false,' + $
    '    "allow_null": false,' + $
    '    "dimensions": "[*]"' + $
    '}'
  oParameter = IDLHydrate(TYPE='ENVIParameterENVIRASTERARRAY', JSON_Parse(hInfo))
  parameters_1.AddParameter, oParameter
  hInfo = $
    '{' + $
    '    "name": "output_path",' + $
    '    "display_name": "Output Directory",' + $
    '    "type": "ENVIURI",' + $
    '    "direction": "INPUT",' + $
    '    "required": false,' + $
    '    "description": "Specific the output directory.",' + $
    '    "hidden": false,' + $
    '    "fold_case": false,' + $
    '    "is_directory": true,' + $
    '    "is_temporary": false' + $
    '}'
  oParameter = IDLHydrate(TYPE='ENVIParameterENVIURI', JSON_Parse(hInfo))
  parameters_1.AddParameter, oParameter
  styleSheet = Hash()
  styleSheet["schema"] = "envitask_3.0"
  styleSheet["show_read_more"] = !false
  ok = envi.UI.SelectTaskParameters(parameters_1, STYLE_SHEET=styleSheet)
  if (ok ne 'OK') then return

  ; --------
  ; Iterator
  ; --------
  foreach iterator_1, parameters_1.input_raster, iterator_1_index do begin

    aggregator_1 = Dictionary()
    aggregator_1.output = !null
    list_aggregator_1 = List()
    ; ---------
    ; Band Math
    ; ---------
    task_3 = ENVITask('PixelwiseBandMathRaster')
    task_3.input_raster = iterator_1
    task_3.expression = 'byte((b3 lt 10)*0+(b3 ge 10)*b3)'
    task_3.data_ignore_value = 0.0
    task_3.Execute

    ; ---------
    ; Band Math
    ; ---------
    task_2 = ENVITask('PixelwiseBandMathRaster')
    task_2.input_raster = iterator_1
    task_2.expression = 'byte((b2 lt 10)*0+(b2 ge 10)*b2)'
    task_2.data_ignore_value = 0.0
    task_2.Execute

    ; ---------
    ; Band Math
    ; ---------
    task_1 = ENVITask('PixelwiseBandMathRaster')
    task_1.input_raster = iterator_1
    task_1.expression = 'byte((b1 lt 10)*0+(b1 ge 10)*b1)'
    task_1.data_ignore_value = 0.0
    task_1.Execute

    ; ----------
    ; Aggregator
    ; ----------
    list_aggregator_1.Add, task_1.output_raster, /EXTRACT
    list_aggregator_1.Add, task_2.output_raster, /EXTRACT
    list_aggregator_1.Add, task_3.output_raster, /EXTRACT
    aggregator_1.output = list_aggregator_1

    filename=STRMID(iterator_1.URI,0,STRLEN(iterator_1.URI)-4)
    basename=FILE_BASENAME(filename)
    resname=parameters_1.output_path+basename+'_stack.dat'
    print,"处理："+resname

    ; -----------------
    ; Build Layer Stack
    ; -----------------
    task_4 = ENVITask('BuildLayerStack')
    task_4.input_rasters = aggregator_1.output
    task_4.resampling = 'Cubic Convolution'
    task_4.output_raster_uri = resname
    task_4.Execute

  endforeach

end